<Window x:Class="DAQSystem.Application.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:ui="clr-namespace:DAQSystem.Application.UI"
        xmlns:model="clr-namespace:DAQSystem.Application.Model"
        xmlns:daq="clr-namespace:DAQSystem.DataAcquisition;assembly=DAQSystem.DataAcquisition"
        xmlns:themes="clr-namespace:DAQSystem.Application.Themes"
        xmlns:converters="clr-namespace:DAQSystem.Application.Themes.Converters"
        d:DataContext="{d:DesignInstance Type=ui:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="{StaticResource DAQSystem.Common.Title}"
        Foreground="{StaticResource DAQSystem.DefaultForegroundColor}"
        Background="{StaticResource DAQSystem.WindowBackground}"
        Height="550" 
        Width="940">

    <Window.Resources>
        <Storyboard x:Key="FadeInAnimation" Completed="OnAnimationCompleted">
            <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="0:0:.45" />
        </Storyboard>

        <Storyboard x:Key="SlideInStoryboard" Completed="OnAnimationCompleted">
            <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
            From="500"
            To="0"
            Duration="0:0:.45" />
        </Storyboard>

        <Storyboard x:Key="SlideOutStoryboard" Completed="OnAnimationCompleted">
            <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
            From="0"
            To="500"
            Duration="0:0:.45" />
        </Storyboard>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="5"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <themes:ImageButton
                    Command="{Binding ExportPlotToPdfCommand}"
                    Content="{StaticResource DAQSystem.Application.ExportPlotToPdf}" 
                    ImageSource="{StaticResource DAQSystem.ExportPlotToPdfIcon}"
                    Style="{StaticResource DAQSystem.ImageButton}">
                </themes:ImageButton>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock
                    VerticalAlignment="Center"
                    Grid.Column="0"
                    Text="{StaticResource DAQSystem.Application.WorkingDirectory}" />
                <TextBox
                    Grid.Column="2"
                    IsReadOnly="True"
                    Text="{Binding WorkingDirectory}" />
                <themes:ImageButton
                    Grid.Column="4"
                    Command="{Binding SelectDirectoryCommand}"
                    Content="{StaticResource DAQSystem.Application.ChangePath}" 
                    ImageSource="{StaticResource DAQSystem.ChangePathIcon}"
                    Style="{StaticResource DAQSystem.ImageButton}">
                </themes:ImageButton>
            </Grid>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPlotFadePlaying}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="ShowCountChannelPlot" Storyboard="{StaticResource FadeInAnimation}"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="ShowCountChannelPlot" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <oxy:PlotView
                        Background="Transparent"
                        BorderThickness="0"
                        FontWeight="Normal"
                        FontFamily="{StaticResource DAQSystem.FixedFontFamily}"
                        Model="{Binding MainPlotModel}">
                    </oxy:PlotView>
                </Grid>
                <ProgressBar
                    Grid.Row="2"
                    Minimum="0"
                    Maximum="1"
                    IsIndeterminate="{Binding IsRendering}"/>
                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <RadioButton
                        Grid.Column="0"
                        Content="{StaticResource DAQSystem.Application.CountChannel}"
                        HorizontalAlignment="Center"
                        GroupName="PlotSwitch"
                        IsEnabled="{Binding CanSwitchPlot}"
                        IsChecked="{Binding Path=CurrentPlotType, Mode=TwoWay, Converter={converters:PlotTypeToBooleanConverter}, ConverterParameter={x:Static model:PlotTypes.CountChannel}}">
                    </RadioButton>
                    <RadioButton
                        Grid.Column="2"
                        GroupName="PlotSwitch"
                        HorizontalAlignment="Center"
                        Content="{StaticResource DAQSystem.Application.EnergyChannel}"
                        IsEnabled="{Binding CanSwitchPlot}"
                        IsChecked="{Binding Path=CurrentPlotType, Mode=TwoWay, Converter={converters:PlotTypeToBooleanConverter}, ConverterParameter={x:Static model:PlotTypes.EnergyChannel}}">
                    </RadioButton>
                    <RadioButton
                        Grid.Column="4"
                        GroupName="PlotSwitch"
                        HorizontalAlignment="Center"
                        Content="{StaticResource DAQSystem.Application.ToLn}"
                        IsEnabled="{Binding CanSwitchPlot}"
                        IsChecked="{Binding Path=CurrentPlotType, Mode=TwoWay, Converter={converters:PlotTypeToBooleanConverter}, ConverterParameter={x:Static model:PlotTypes.ToLn}}">
                    </RadioButton>
                    <Grid Grid.Column="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{StaticResource DAQSystem.SmallMarginGridLength}"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentPlotType}" Value="{x:Static model:PlotTypes.MergedChannel}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <TextBlock 
                            Grid.Column="0"
                            Text="{StaticResource DAQSystem.Application.MergedBy}">
                        </TextBlock>
                        <ComboBox 
                            Grid.Column="2"
                            ItemsSource="{Binding MergedParameters}"
                            SelectedItem="{Binding SelectedMergedParameter, Mode=TwoWay}">
                        </ComboBox>
                    </Grid>
                    <RadioButton
                        Grid.Column="6"
                        GroupName="PlotSwitch"
                        HorizontalAlignment="Center"
                        Content="{StaticResource DAQSystem.Application.MergedChannel}"
                        IsEnabled="{Binding CanSwitchPlot}"
                        IsChecked="{Binding Path=CurrentPlotType, Mode=TwoWay, Converter={converters:PlotTypeToBooleanConverter}, ConverterParameter={x:Static model:PlotTypes.MergedChannel}}">
                        <RadioButton.Style>
                            <Style BasedOn="{StaticResource DAQSystem.BaseRadioButtonStyle}" TargetType="RadioButton">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentPlotType}" Value="{x:Static model:PlotTypes.MergedChannel}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>
                    <RadioButton
                        Grid.Column="8"
                        GroupName="PlotSwitch"
                        HorizontalAlignment="Center"
                        Content="{StaticResource DAQSystem.Application.BiasCorrection}"
                        IsEnabled="{Binding CanSwitchPlot}"
                        IsChecked="{Binding Path=CurrentPlotType, Mode=TwoWay, Converter={converters:PlotTypeToBooleanConverter}, ConverterParameter={x:Static model:PlotTypes.BiasCorrection}}">
                    </RadioButton>
                </Grid>
            </Grid>
            <Grid
                x:Name="ControlGrid"
                Grid.Column="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="7*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>
                    <themes:ImageButton 
                        Grid.Row="0"
                        Command="{Binding ToggleConnectCommand}">
                        <themes:ImageButton.Style>
                            <Style BasedOn="{StaticResource DAQSystem.ImageButton}" TargetType="themes:ImageButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Collecting}">
                                        <Setter Property="Content" Value="{StaticResource DAQSystem.Application.StopSerialCommunication}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource DAQSystem.LightRed}"/>
                                        <Setter Property="ImageSource" Value="{StaticResource DAQSystem.DisconnectIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Connected}">
                                        <Setter Property="Content" Value="{StaticResource DAQSystem.Application.StopSerialCommunication}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource DAQSystem.LightRed}"/>
                                        <Setter Property="ImageSource" Value="{StaticResource DAQSystem.DisconnectIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Idle}">
                                        <Setter Property="Content" Value="{StaticResource DAQSystem.Application.StartSerialCommunication}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource DAQSystem.LightGreen}"/>
                                        <Setter Property="ImageSource" Value="{StaticResource DAQSystem.ConnectIcon}" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsFocused}" Value="True" />
                                            <Condition Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Idle}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{StaticResource DAQSystem.Green}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsFocused}" Value="True" />
                                            <Condition Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Connected}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{StaticResource DAQSystem.Red}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsFocused}" Value="True" />
                                            <Condition Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Collecting}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{StaticResource DAQSystem.Red}" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </themes:ImageButton.Style>
                    </themes:ImageButton>
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid
                            Grid.Row="0" 
                            Grid.Column="0"
                            Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ComboBox
                                Grid.Row="0" 
                                Grid.Column="0"
                                ItemsSource="{Binding DataAcquisitionSettings}"
                                SelectedItem="{Binding SelectedSetting, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:CommandTypesToStringConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Grid
                                Grid.Row="0"
                                Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.Style>
                                    <Style TargetType="Grid" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSettingFadePlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="RefreshSetting" Storyboard="{StaticResource FadeInAnimation}"/>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <RemoveStoryboard BeginStoryboardName="RefreshSetting" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <TextBox
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3">
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource DAQSystem.DataGridEditingTextStyle}" TargetType="TextBox" >
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetCollectDuration}">
                                                    <Setter Property="Text" Value="{Binding SettingCommands[0].Value}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetInitialThreshold}">
                                                    <Setter Property="Text" Value="{Binding SettingCommands[1].Value}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetSignalBaseline}">
                                                    <Setter Property="Text" Value="{Binding SettingCommands[3].Value}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetTimeInterval}">
                                                    <Setter Property="Text" Value="{Binding SettingCommands[4].Value}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetGain}">
                                                    <Setter Property="Text" Value="{Binding SettingCommands[5].Value}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetSignalSign}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Collecting}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <RadioButton
                                    Grid.Column="0"
                                    Content="{StaticResource DAQSystem.Application.Positive}"
                                    GroupName="SignalSign"
                                    IsChecked="{Binding SettingCommands[2].Value, Converter={converters:IntToBooleanConverter}, Mode=TwoWay}">
                                    <RadioButton.Style>
                                        <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="RadioButton" >
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetSignalSign}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Collecting}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RadioButton.Style>
                                </RadioButton>
                                <RadioButton
                                    Grid.Column="2"
                                    GroupName="SignalSign"
                                    Content="{StaticResource DAQSystem.Application.Negative}"
                                    IsChecked="{Binding SettingCommands[2].Value, Converter={converters:IntToBooleanConverter}, ConverterParameter=inverse, Mode=TwoWay}">
                                    <RadioButton.Style>
                                        <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="RadioButton" >
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSetting}" Value="{x:Static daq:CommandTypes.SetSignalSign}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CurrentStatus}" Value="{x:Static model:AppStatus.Collecting}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RadioButton.Style>
                                </RadioButton>
                            </Grid>
                            <Grid
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <ListView 
                                    ItemsSource="{Binding SettingCommands}"
                                    SelectedItem="{Binding SelectedSettingCommand, Mode=TwoWay}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn
                                                DisplayMemberBinding="{Binding CommandType, Converter={converters:SettingParametersToString}}" 
                                                Header="{StaticResource DAQSystem.Application.Parameter}"/>
                                            <GridViewColumn
                                                DisplayMemberBinding="{Binding Value}"
                                                Header="{StaticResource DAQSystem.Application.Value}" />
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                        </Grid>

                        <themes:ImageButton
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="{StaticResource DAQSystem.Application.StartToCollect}"
                            Command="{Binding StartCollectingCommand}"
                            ImageSource="{StaticResource DAQSystem.StartToCollectIcon}"
                            Style="{StaticResource DAQSystem.ImageButton}">
                        </themes:ImageButton>

                        <themes:ImageButton
                            Grid.Row="2" 
                            Grid.Column="2"
                            Content="{StaticResource DAQSystem.Application.StopAndReset}"
                            Command="{Binding StopAndResetCommand}"
                            ImageSource="{StaticResource DAQSystem.StopAndResetIcon}"
                            Style="{StaticResource DAQSystem.ImageButton}">
                        </themes:ImageButton>

                    </Grid>
                    <Grid Grid.Row="4">
                        <GroupBox Header="{StaticResource DAQSystem.Application.Functions}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                                    <RowDefinition />
                                    <RowDefinition Height="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="{StaticResource DAQSystem.MediumMarginGridLength}"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <themes:ImageButton
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Content="{StaticResource DAQSystem.Application.FitGaussian}"
                                    Command="{Binding OpenFitGaussianDialogCommand}"
                                    ImageSource="{StaticResource DAQSystem.FitGaussianIcon}"
                                    Style="{StaticResource DAQSystem.ImageButton}">     
                                </themes:ImageButton>

                                <themes:ImageButton
                                   Grid.Row="2"
                                   Grid.Column="2"
                                   Content="{StaticResource DAQSystem.Application.ChannelToEnergy}"
                                   Command="{Binding OpenChannelToEnergyDialogCommand}"
                                   ImageSource="{StaticResource DAQSystem.ChannelToEnergyIcon}"
                                   Style="{StaticResource DAQSystem.ImageButton}">
                                </themes:ImageButton>

                                <themes:ImageButton
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    Content="{StaticResource DAQSystem.Application.BiasCorrection}"
                                    Command="{Binding OpenBiasCorrectionDialogCommand}"
                                    ImageSource="{StaticResource DAQSystem.BiasCorrectionIcon}"
                                    Style="{StaticResource DAQSystem.ImageButton}">     
                                </themes:ImageButton>

                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
